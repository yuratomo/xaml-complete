call xaml#class('Application', 'DispatcherObject', [
  \ xaml#prop('xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"', ''),
  \ xaml#prop('xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"', ''),
  \ xaml#event('Startup', 'StartupEventHandler'),
  \ xaml#event('Exit', 'ExitEventHandler'),
  \ xaml#event('Activated', 'EventHandler'),
  \ xaml#event('Deactivated', 'EventHandler'),
  \ xaml#event('SessionEnding', 'SessionEndingCancelEventHandler'),
  \ xaml#event('DispatcherUnhandledException', 'DispatcherUnhandledExceptionEventHandler'),
  \ xaml#event('Navigating', 'NavigatingCancelEventHandler'),
  \ xaml#event('Navigated', 'NavigatedEventHandler'),
  \ xaml#event('NavigationProgress', 'NavigationProgressEventHandler'),
  \ xaml#event('NavigationFailed', 'NavigationFailedEventHandler'),
  \ xaml#event('LoadCompleted', 'LoadCompletedEventHandler'),
  \ xaml#event('NavigationStopped', 'NavigationStoppedEventHandler'),
  \ xaml#event('FragmentNavigation', 'FragmentNavigationEventHandler'),
  \ xaml#prop('Current', 'Application'),
  \ xaml#prop('Windows', 'WindowCollection'),
  \ xaml#prop('MainWindow', 'Window'),
  \ xaml#prop('ShutdownMode', 'ShutdownMode'),
  \ xaml#prop('Resources', 'ResourceDictionary'),
  \ xaml#prop('StartupUri', 'Uri'),
  \ xaml#prop('Properties', 'IDictionary'),
  \ xaml#prop('ResourceAssembly', 'Assembly'),
  \ xaml#prop('WindowsInternal', 'WindowCollection'),
  \ xaml#prop('NonAppWindowsInternal', 'WindowCollection'),
  \ xaml#prop('MimeType', 'MimeType'),
  \ xaml#prop('ServiceProvider', 'IServiceProvider'),
  \ xaml#prop('BrowserCallbackServices', 'IBrowserCallbackServices'),
  \ xaml#prop('NavService', 'NavigationService'),
  \ xaml#prop('IsShuttingDown', 'bool'),
  \ xaml#prop('IsApplicationObjectShuttingDown', 'bool'),
  \ xaml#prop('ParkingHwnd', 'int'),
  \ xaml#prop('ApplicationMarkupBaseUri', 'Uri'),
  \ ])

call xaml#class('NavigationWindow', 'Window', [
  \ xaml#prop('SandboxExternalContent', 'bool'),
  \ xaml#prop('ShowsNavigationUI', 'bool'),
  \ xaml#prop('BackStack', 'IEnumerable'),
  \ xaml#prop('ForwardStack', 'IEnumerable'),
  \ xaml#prop('CanGoBack', 'bool'),
  \ xaml#prop('CanGoForward', 'bool'),
  \ xaml#prop('Source', 'Uri'),
  \ xaml#event('Navigating', 'NavigatingCancelEventHandler'),
  \ xaml#event('NavigationProgress', 'NavigationProgressEventHandler'),
  \ xaml#event('NavigationFailed', 'NavigationFailedEventHandler'),
  \ xaml#event('Navigated', 'NavigatedEventHandler'),
  \ xaml#event('LoadCompleted', 'LoadCompletedEventHandler'),
  \ xaml#event('NavigationStopped', 'NavigationStoppedEventHandler'),
  \ xaml#event('FragmentNavigation', 'FragmentNavigationEventHandler'),
  \ xaml#event('Navigating', 'NavigatingCancelEventHandler'),
  \ xaml#event('NavigationProgress', 'NavigationProgressEventHandler'),
  \ xaml#event('NavigationFailed', 'NavigationFailedEventHandler'),
  \ xaml#event('Navigated', 'NavigatedEventHandler'),
  \ xaml#event('LoadCompleted', 'LoadCompletedEventHandler'),
  \ xaml#event('NavigationStopped', 'NavigationStoppedEventHandler'),
  \ xaml#event('FragmentNavigation', 'FragmentNavigationEventHandler'),
  \ ])

call xaml#class('Window', 'ContentControl', [
  \ xaml#prop('xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"', ''),
  \ xaml#prop('xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"', ''),
  \ xaml#prop('TaskbarItemInfo', 'TaskbarItemInfo'),
  \ xaml#prop('AllowsTransparency', 'bool'),
  \ xaml#prop('Title', 'string'),
  \ xaml#prop('Icon', 'ImageSource'),
  \ xaml#prop('SizeToContent', 'SizeToContent'),
  \ xaml#prop('Top', 'float64'),
  \ xaml#prop('Left', 'float64'),
  \ xaml#prop('ShowInTaskbar', 'bool'),
  \ xaml#prop('IsActive', 'bool'),
  \ xaml#prop('WindowStyle', 'WindowStyle'),
  \ xaml#prop('WindowState', 'WindowState'),
  \ xaml#prop('ResizeMode', 'ResizeMode'),
  \ xaml#prop('Topmost', 'bool'),
  \ xaml#prop('ShowActivated', 'bool'),
  \ xaml#prop('RestoreBounds', 'Rect'),
  \ xaml#prop('WindowStartupLocation', 'WindowStartupLocation'),
  \ xaml#prop('Owner', 'Window'),
  \ xaml#prop('OwnedWindows', 'WindowCollection'),
  \ xaml#prop('DialogResult', 'Nullable`1<bool>'),
  \ xaml#prop('IsSourceWindowNull', 'bool'),
  \ xaml#prop('IsCompositionTargetInvalid', 'bool'),
  \ xaml#prop('CriticalHandle', 'int'),
  \ xaml#prop('WindowBounds', 'NativeMethods/RECT'),
  \ xaml#prop('RootVisual', 'Visual'),
  \ xaml#prop('CompositionTarget', 'HwndTarget'),
  \ xaml#prop('WindowSize', 'Size'),
  \ xaml#prop('IsDisposed', 'bool'),
  \ xaml#prop('IsVisibilitySet', 'bool'),
  \ xaml#prop('Win32Style', 'int32'),
  \ xaml#event('SourceInitialized', 'EventHandler'),
  \ xaml#event('Activated', 'EventHandler'),
  \ xaml#event('Deactivated', 'EventHandler'),
  \ xaml#event('StateChanged', 'EventHandler'),
  \ xaml#event('LocationChanged', 'EventHandler'),
  \ xaml#event('Closing', 'CancelEventHandler'),
  \ xaml#event('Closed', 'EventHandler'),
  \ xaml#event('ContentRendered', 'EventHandler'),
  \ ])

call xaml#class('FrameworkElement', 'UIElement', [
  \ xaml#event('RequestBringIntoView', 'RequestBringIntoViewEventHandler'),
  \ xaml#event('SizeChanged', 'SizeChangedEventHandler'),
  \ xaml#prop('Loaded', 'RoutedEventHandler'),
  \ xaml#prop('Unloaded', 'RoutedEventHandler'),
  \ xaml#prop('ToolTipOpening', 'ToolTipEventHandler'),
  \ xaml#prop('ToolTipClosing', 'ToolTipEventHandler'),
  \ xaml#prop('ContextMenuOpening', 'ContextMenuEventHandler'),
  \ xaml#prop('ContextMenuClosing', 'ContextMenuEventHandler'),
  \ xaml#prop('Style', 'Style'),
  \ xaml#prop('OverridesDefaultStyle', 'bool'),
  \ xaml#prop('UseLayoutRounding', 'bool'),
  \ xaml#prop('DefaultStyleKey', 'object'),
  \ xaml#prop('DataContext', 'object'),
  \ xaml#prop('BindingGroup', 'Data.BindingGroup'),
  \ xaml#prop('Language', 'XmlLanguage'),
  \ xaml#prop('Name', 'string'),
  \ xaml#prop('Tag', 'object'),
  \ xaml#prop('InputScope', 'Input.InputScope'),
  \ xaml#prop('ActualWidth', 'float64'),
  \ xaml#prop('ActualHeight', 'float64'),
  \ xaml#prop('LayoutTransform', 'Transform'),
  \ xaml#prop('Width', 'float64'),
  \ xaml#prop('MinWidth', 'float64'),
  \ xaml#prop('MaxWidth', 'float64'),
  \ xaml#prop('Height', 'float64'),
  \ xaml#prop('MinHeight', 'float64'),
  \ xaml#prop('MaxHeight', 'float64'),
  \ xaml#prop('FlowDirection', 'FlowDirection'),
  \ xaml#prop('Margin', 'Thickness'),
  \ xaml#prop('HorizontalAlignment', 'HorizontalAlignment'),
  \ xaml#prop('VerticalAlignment', 'VerticalAlignment'),
  \ xaml#prop('FocusVisualStyle', 'Style'),
  \ xaml#prop('Cursor', 'Input.Cursor'),
  \ xaml#prop('ForceCursor', 'bool'),
  \ xaml#prop('LoadedPending', 'object[]'),
  \ xaml#prop('UnloadedPending', 'object[]'),
  \ xaml#prop('ToolTip', 'object'),
  \ xaml#prop('ContextMenu', 'Controls.ContextMenu'),
  \ ])

call xaml#class('UIElement', 'Object', [
  \ xaml#event('PreviewMouseDown', 'MouseButtonEventHandler'),
  \ xaml#event('MouseDown', 'MouseButtonEventHandler'),
  \ xaml#event('PreviewMouseUp', 'MouseButtonEventHandler'),
  \ xaml#event('MouseUp', 'MouseButtonEventHandler'),
  \ xaml#event('PreviewMouseLeftButtonDown', 'MouseButtonEventHandler'),
  \ xaml#event('MouseLeftButtonDown', 'MouseButtonEventHandler'),
  \ xaml#event('PreviewMouseLeftButtonUp', 'MouseButtonEventHandler'),
  \ xaml#event('MouseLeftButtonUp', 'MouseButtonEventHandler'),
  \ xaml#event('PreviewMouseRightButtonDown', 'MouseButtonEventHandler'),
  \ xaml#event('MouseRightButtonDown', 'MouseButtonEventHandler'),
  \ xaml#event('PreviewMouseRightButtonUp', 'MouseButtonEventHandler'),
  \ xaml#event('MouseRightButtonUp', 'MouseButtonEventHandler'),
  \ xaml#event('PreviewMouseMove', 'MouseEventHandler'),
  \ xaml#event('MouseMove', 'MouseEventHandler'),
  \ xaml#event('PreviewMouseWheel', 'MouseWheelEventHandler'),
  \ xaml#event('MouseWheel', 'MouseWheelEventHandler'),
  \ xaml#event('MouseEnter', 'MouseEventHandler'),
  \ xaml#event('MouseLeave', 'MouseEventHandler'),
  \ xaml#event('GotMouseCapture', 'MouseEventHandler'),
  \ xaml#event('LostMouseCapture', 'MouseEventHandler'),
  \ xaml#event('QueryCursor', 'QueryCursorEventHandler'),
  \ xaml#event('PreviewStylusDown', 'StylusDownEventHandler'),
  \ xaml#event('StylusDown', 'StylusDownEventHandler'),
  \ xaml#event('PreviewStylusUp', 'StylusEventHandler'),
  \ xaml#event('StylusUp', 'StylusEventHandler'),
  \ xaml#event('PreviewStylusMove', 'StylusEventHandler'),
  \ xaml#event('StylusMove', 'StylusEventHandler'),
  \ xaml#event('PreviewStylusInAirMove', 'StylusEventHandler'),
  \ xaml#event('StylusInAirMove', 'StylusEventHandler'),
  \ xaml#event('StylusEnter', 'StylusEventHandler'),
  \ xaml#event('StylusLeave', 'StylusEventHandler'),
  \ xaml#event('PreviewStylusInRange', 'StylusEventHandler'),
  \ xaml#event('StylusInRange', 'StylusEventHandler'),
  \ xaml#event('PreviewStylusOutOfRange', 'StylusEventHandler'),
  \ xaml#event('StylusOutOfRange', 'StylusEventHandler'),
  \ xaml#event('PreviewStylusSystemGesture', 'StylusSystemGestureEventHandler'),
  \ xaml#event('StylusSystemGesture', 'StylusSystemGestureEventHandler'),
  \ xaml#event('GotStylusCapture', 'StylusEventHandler'),
  \ xaml#event('LostStylusCapture', 'StylusEventHandler'),
  \ xaml#event('StylusButtonDown', 'StylusButtonEventHandler'),
  \ xaml#event('StylusButtonUp', 'StylusButtonEventHandler'),
  \ xaml#event('PreviewStylusButtonDown', 'StylusButtonEventHandler'),
  \ xaml#event('PreviewStylusButtonUp', 'StylusButtonEventHandler'),
  \ xaml#event('PreviewKeyDown', 'KeyEventHandler'),
  \ xaml#event('KeyDown', 'KeyEventHandler'),
  \ xaml#event('PreviewKeyUp', 'KeyEventHandler'),
  \ xaml#event('KeyUp', 'KeyEventHandler'),
  \ xaml#event('PreviewGotKeyboardFocus', 'KeyboardFocusChangedEventHandler'),
  \ xaml#event('GotKeyboardFocus', 'KeyboardFocusChangedEventHandler'),
  \ xaml#event('PreviewLostKeyboardFocus', 'KeyboardFocusChangedEventHandler'),
  \ xaml#event('LostKeyboardFocus', 'KeyboardFocusChangedEventHandler'),
  \ xaml#event('PreviewTextInput', 'TextCompositionEventHandler'),
  \ xaml#event('TextInput', 'TextCompositionEventHandler'),
  \ xaml#event('PreviewQueryContinueDrag', 'QueryContinueDragEventHandler'),
  \ xaml#event('QueryContinueDrag', 'QueryContinueDragEventHandler'),
  \ xaml#event('PreviewGiveFeedback', 'GiveFeedbackEventHandler'),
  \ xaml#event('GiveFeedback', 'GiveFeedbackEventHandler'),
  \ xaml#event('PreviewDragEnter', 'DragEventHandler'),
  \ xaml#event('DragEnter', 'DragEventHandler'),
  \ xaml#event('PreviewDragOver', 'DragEventHandler'),
  \ xaml#event('DragOver', 'DragEventHandler'),
  \ xaml#event('PreviewDragLeave', 'DragEventHandler'),
  \ xaml#event('DragLeave', 'DragEventHandler'),
  \ xaml#event('PreviewDrop', 'DragEventHandler'),
  \ xaml#event('Drop', 'DragEventHandler'),
  \ xaml#event('PreviewTouchDown', 'PreviewTouchDown'),
  \ xaml#event('TouchDown', 'TouchDown'),
  \ xaml#event('PreviewTouchMove', 'PreviewTouchMove'),
  \ xaml#event('TouchMove', 'TouchMove'),
  \ xaml#event('PreviewTouchUp', 'PreviewTouchUp'),
  \ xaml#event('TouchUp', 'TouchUp'),
  \ xaml#event('GotTouchCapture', 'GotTouchCapture'),
  \ xaml#event('LostTouchCapture', 'LostTouchCapture'),
  \ xaml#event('TouchEnter', 'TouchEnter'),
  \ xaml#event('TouchLeave', 'TouchLeave'),
  \ xaml#event('GotFocus', 'RoutedEventHandler'),
  \ xaml#event('LostFocus', 'RoutedEventHandler'),
  \ xaml#event('ManipulationStarting', 'ManipulationStarting'),
  \ xaml#event('ManipulationStarted', 'ManipulationStarted'),
  \ xaml#event('ManipulationDelta', 'ManipulationDelta'),
  \ xaml#event('ManipulationInertiaStarting', 'ManipulationInertiaStarting'),
  \ xaml#event('ManipulationBoundaryFeedback', 'ManipulationBoundaryFeedback'),
  \ xaml#event('ManipulationCompleted', 'ManipulationCompleted'),
  \ xaml#prop('IsMouseDirectlyOver', 'bool'),
  \ xaml#prop('IsMouseOver', 'bool'),
  \ xaml#prop('IsStylusOver', 'bool'),
  \ xaml#prop('IsKeyboardFocusWithin', 'bool'),
  \ xaml#prop('IsMouseCaptured', 'bool'),
  \ xaml#prop('IsMouseCaptureWithin', 'bool'),
  \ xaml#prop('IsStylusDirectlyOver', 'bool'),
  \ xaml#prop('IsStylusCaptured', 'bool'),
  \ xaml#prop('IsStylusCaptureWithin', 'bool'),
  \ xaml#prop('IsKeyboardFocused', 'bool'),
  \ xaml#prop('AreAnyTouchesDirectlyOver', 'bool'),
  \ xaml#prop('AreAnyTouchesOver', 'bool'),
  \ xaml#prop('AreAnyTouchesCaptured', 'bool'),
  \ xaml#prop('AreAnyTouchesCapturedWithin', 'bool'),
  \ xaml#prop('AllowDrop', 'bool'),
  \ xaml#prop('RenderTransform', 'Transform'),
  \ xaml#prop('RenderTransformOrigin', 'Point'),
  \ xaml#prop('Opacity', 'float64'),
  \ xaml#prop('OpacityMask', 'Brush'),
  \ xaml#prop('BitmapEffect', 'Effects.BitmapEffect'),
  \ xaml#prop('Effect', 'Effects.Effect'),
  \ xaml#prop('BitmapEffectInput', 'Effects.BitmapEffectInput'),
  \ xaml#prop('CacheMode', 'Media.CacheMode'),
  \ xaml#prop('Uid', 'string'),
  \ xaml#prop('Visibility', 'Visibility'),
  \ xaml#prop('ClipToBounds', 'bool'),
  \ xaml#prop('Clip', 'Geometry'),
  \ xaml#prop('SnapsToDevicePixels', 'bool'),
  \ xaml#prop('IsFocused', 'bool'),
  \ xaml#prop('IsEnabled', 'bool'),
  \ xaml#prop('IsHitTestVisible', 'bool'),
  \ xaml#prop('IsVisible', 'bool'),
  \ xaml#prop('Focusable', 'bool'),
  \ xaml#prop('IsManipulationEnabled', 'bool'),
  \ xaml#prop('FocusWithinProperty', 'FocusWithinProperty'),
  \ xaml#prop('MouseOverProperty', 'MouseOverProperty'),
  \ xaml#prop('MouseCaptureWithinProperty', 'MouseCaptureWithinProperty'),
  \ xaml#prop('StylusOverProperty', 'StylusOverProperty'),
  \ xaml#prop('StylusCaptureWithinProperty', 'StylusCaptureWithinProperty'),
  \ xaml#prop('TouchesOverProperty', 'Input.TouchesOverProperty'),
  \ xaml#prop('TouchesCapturedWithinProperty', 'Input.TouchesCapturedWithinProperty'),
  \ ])

call xaml#class('FrameworkContentElement', 'UIElement', [
  \ xaml#prop('Style', 'Style'),
  \ xaml#prop('OverridesDefaultStyle', 'bool'),
  \ xaml#prop('DefaultStyleKey', 'object'),
  \ xaml#prop('Name', 'string'),
  \ xaml#prop('Tag', 'object'),
  \ xaml#prop('Language', 'XmlLanguage'),
  \ xaml#prop('FocusVisualStyle', 'Style'),
  \ xaml#prop('Cursor', 'Cursor'),
  \ xaml#prop('ForceCursor', 'bool'),
  \ xaml#prop('InputScope', 'InputScope'),
  \ xaml#prop('DataContext', 'object'),
  \ xaml#prop('BindingGroup', 'BindingGroup'),
  \ xaml#prop('ToolTip', 'object'),
  \ xaml#prop('ContextMenu', 'ContextMenu'),
  \ xaml#event('TargetUpdated', 'EventHandler<DataTransferEventArgs>'),
  \ xaml#event('SourceUpdated', 'EventHandler<DataTransferEventArgs>'),
  \ xaml#event('DataContextChanged', 'DependencyPropertyChangedEventHandler'),
  \ xaml#event('Initialized', 'EventHandler'),
  \ xaml#event('Loaded', 'RoutedEventHandler'),
  \ xaml#event('Unloaded', 'RoutedEventHandler'),
  \ xaml#event('ToolTipOpening', 'ToolTipEventHandler'),
  \ xaml#event('ToolTipClosing', 'ToolTipEventHandler'),
  \ xaml#event('ContextMenuOpening', 'ContextMenuEventHandler'),
  \ xaml#event('ContextMenuClosing', 'ContextMenuEventHandler'),
  \ xaml#event('ResourcesChanged', 'EventHandler'),
  \ xaml#event('InheritedPropertyChanged', 'InheritedPropertyChangedEventHandler'),
  \ ])



call xaml#class('Calendar', 'Object', [
  \ xaml#field('m_currentEraValue', 'int32'),
  \ xaml#field('twoDigitYearMax', 'int32'),
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('BaseCalendarID', 'int32'),
  \ xaml#prop('AlgorithmType', 'CalendarAlgorithmType'),
  \ xaml#prop('IsReadOnly', 'bool'),
  \ xaml#prop('CurrentEraValue', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ xaml#prop('TwoDigitYearMax', 'int32'),
  \ ])

call xaml#class('CharUnicodeInfo', 'Object', [
  \ xaml#field('TableName', 'char'),
  \ xaml#field('version', 'uint16'),
  \ xaml#field('OffsetToCategoriesIndex', 'uint32'),
  \ xaml#field('OffsetToCategoriesValue', 'uint32'),
  \ xaml#field('OffsetToNumbericIndex', 'uint32'),
  \ xaml#field('OffsetToDigitValue', 'uint32'),
  \ xaml#field('OffsetToNumbericValue', 'uint32'),
  \ xaml#field('decimalDigit', 'int8'),
  \ xaml#field('digit', 'int8'),
  \ ])

call xaml#class('CompareInfo', 'Object', [
  \ xaml#prop('Name', 'string'),
  \ xaml#prop('LCID', 'int32'),
  \ xaml#prop('IsLegacy20SortingBehaviorRequested', 'bool'),
  \ ])

call xaml#class('CultureInfo', 'Object', [
  \ xaml#field('m_isReadOnly', 'bool'),
  \ xaml#field('compareInfo', 'CompareInfo'),
  \ xaml#field('textInfo', 'TextInfo'),
  \ xaml#field('regionInfo', 'RegionInfo'),
  \ xaml#field('numInfo', 'NumberFormatInfo'),
  \ xaml#field('dateTimeInfo', 'DateTimeFormatInfo'),
  \ xaml#field('calendar', 'Calendar'),
  \ xaml#field('m_dataItem', 'int32'),
  \ xaml#field('cultureID', 'int32'),
  \ xaml#field('m_cultureData', 'CultureData'),
  \ xaml#field('m_isInherited', 'bool'),
  \ xaml#field('m_name', 'string'),
  \ xaml#prop('IsSafeCrossDomain', 'bool'),
  \ xaml#prop('CreatedDomainID', 'int32'),
  \ xaml#prop('CurrentCulture', 'CultureInfo'),
  \ xaml#prop('UserDefaultCulture', 'CultureInfo'),
  \ xaml#prop('UserDefaultUICulture', 'CultureInfo'),
  \ xaml#prop('CurrentUICulture', 'CultureInfo'),
  \ xaml#prop('InstalledUICulture', 'CultureInfo'),
  \ xaml#prop('InvariantCulture', 'CultureInfo'),
  \ xaml#prop('Parent', 'CultureInfo'),
  \ xaml#prop('LCID', 'int32'),
  \ xaml#prop('KeyboardLayoutId', 'int32'),
  \ xaml#prop('Name', 'string'),
  \ xaml#prop('SortName', 'string'),
  \ xaml#prop('IetfLanguageTag', 'string'),
  \ xaml#prop('DisplayName', 'string'),
  \ xaml#prop('NativeName', 'string'),
  \ xaml#prop('EnglishName', 'string'),
  \ xaml#prop('TwoLetterISOLanguageName', 'string'),
  \ xaml#prop('ThreeLetterISOLanguageName', 'string'),
  \ xaml#prop('ThreeLetterWindowsLanguageName', 'string'),
  \ xaml#prop('CompareInfo', 'CompareInfo'),
  \ xaml#prop('TextInfo', 'TextInfo'),
  \ xaml#prop('IsNeutralCulture', 'bool'),
  \ xaml#prop('CultureTypes', 'CultureTypes'),
  \ xaml#prop('NumberFormat', 'NumberFormatInfo'),
  \ xaml#prop('DateTimeFormat', 'DateTimeFormatInfo'),
  \ xaml#prop('Calendar', 'Calendar'),
  \ xaml#prop('OptionalCalendars', 'Calendar[]'),
  \ xaml#prop('UseUserOverride', 'bool'),
  \ xaml#prop('IsReadOnly', 'bool'),
  \ xaml#prop('HasInvariantCultureName', 'bool'),
  \ xaml#prop('IsTaiwanSku', 'bool'),
  \ ])

call xaml#class('CultureNotFoundException', 'ArgumentException', [
  \ xaml#prop('InvalidCultureName', 'string'),
  \ xaml#prop('Message', 'string'),
  \ ])

call xaml#class('DateTimeFormatInfo', 'Object', [
  \ xaml#field('m_name', 'string'),
  \ xaml#field('amDesignator', 'string'),
  \ xaml#field('pmDesignator', 'string'),
  \ xaml#field('dateSeparator', 'string'),
  \ xaml#field('generalShortTimePattern', 'string'),
  \ xaml#field('generalLongTimePattern', 'string'),
  \ xaml#field('timeSeparator', 'string'),
  \ xaml#field('monthDayPattern', 'string'),
  \ xaml#field('dateTimeOffsetPattern', 'string'),
  \ xaml#field('calendar', 'Calendar'),
  \ xaml#field('firstDayOfWeek', 'int32'),
  \ xaml#field('calendarWeekRule', 'int32'),
  \ xaml#field('fullDateTimePattern', 'string'),
  \ xaml#field('abbreviatedDayNames', 'string[]'),
  \ xaml#field('m_superShortDayNames', 'string[]'),
  \ xaml#field('dayNames', 'string[]'),
  \ xaml#field('abbreviatedMonthNames', 'string[]'),
  \ xaml#field('monthNames', 'string[]'),
  \ xaml#field('genitiveMonthNames', 'string[]'),
  \ xaml#field('m_genitiveAbbreviatedMonthNames', 'string[]'),
  \ xaml#field('leapYearMonthNames', 'string[]'),
  \ xaml#field('longDatePattern', 'string'),
  \ xaml#field('shortDatePattern', 'string'),
  \ xaml#field('yearMonthPattern', 'string'),
  \ xaml#field('longTimePattern', 'string'),
  \ xaml#field('shortTimePattern', 'string'),
  \ xaml#field('allShortDatePatterns', 'string[]'),
  \ xaml#field('allLongDatePatterns', 'string[]'),
  \ xaml#field('allShortTimePatterns', 'string[]'),
  \ xaml#field('allLongTimePatterns', 'string[]'),
  \ xaml#field('m_eraNames', 'string[]'),
  \ xaml#field('m_abbrevEraNames', 'string[]'),
  \ xaml#field('m_abbrevEnglishEraNames', 'string[]'),
  \ xaml#field('optionalCalendars', 'int32[]'),
  \ xaml#field('m_isReadOnly', 'bool'),
  \ xaml#field('formatFlags', 'DateTimeFormatFlags'),
  \ xaml#field('m_isDefaultCalendar', 'bool'),
  \ xaml#field('m_dateWords', 'string[]'),
  \ xaml#prop('InvariantInfo', 'DateTimeFormatInfo'),
  \ xaml#prop('CurrentInfo', 'DateTimeFormatInfo'),
  \ xaml#prop('AMDesignator', 'string'),
  \ xaml#prop('Calendar', 'Calendar'),
  \ xaml#prop('EraNames', 'string[]'),
  \ xaml#prop('AbbreviatedEraNames', 'string[]'),
  \ xaml#prop('AbbreviatedEnglishEraNames', 'string[]'),
  \ xaml#prop('DateSeparator', 'string'),
  \ xaml#prop('FirstDayOfWeek', 'DayOfWeek'),
  \ xaml#prop('CalendarWeekRule', 'CalendarWeekRule'),
  \ xaml#prop('FullDateTimePattern', 'string'),
  \ xaml#prop('LongDatePattern', 'string'),
  \ xaml#prop('LongTimePattern', 'string'),
  \ xaml#prop('MonthDayPattern', 'string'),
  \ xaml#prop('PMDesignator', 'string'),
  \ xaml#prop('RFC1123Pattern', 'string'),
  \ xaml#prop('ShortDatePattern', 'string'),
  \ xaml#prop('ShortTimePattern', 'string'),
  \ xaml#prop('SortableDateTimePattern', 'string'),
  \ xaml#prop('GeneralShortTimePattern', 'string'),
  \ xaml#prop('GeneralLongTimePattern', 'string'),
  \ xaml#prop('DateTimeOffsetPattern', 'string'),
  \ xaml#prop('TimeSeparator', 'string'),
  \ xaml#prop('UniversalSortableDateTimePattern', 'string'),
  \ xaml#prop('YearMonthPattern', 'string'),
  \ xaml#prop('AbbreviatedDayNames', 'string[]'),
  \ xaml#prop('ShortestDayNames', 'string[]'),
  \ xaml#prop('DayNames', 'string[]'),
  \ xaml#prop('AbbreviatedMonthNames', 'string[]'),
  \ xaml#prop('MonthNames', 'string[]'),
  \ xaml#prop('HasSpacesInMonthNames', 'bool'),
  \ xaml#prop('HasSpacesInDayNames', 'bool'),
  \ xaml#prop('IsReadOnly', 'bool'),
  \ xaml#prop('NativeCalendarName', 'string'),
  \ xaml#prop('AbbreviatedMonthGenitiveNames', 'string[]'),
  \ xaml#prop('MonthGenitiveNames', 'string[]'),
  \ xaml#prop('FullTimeSpanPositivePattern', 'string'),
  \ xaml#prop('FullTimeSpanNegativePattern', 'string'),
  \ xaml#prop('CompareInfo', 'CompareInfo'),
  \ xaml#prop('FormatFlags', 'DateTimeFormatFlags'),
  \ xaml#prop('HasForceTwoDigitYears', 'bool'),
  \ xaml#prop('HasYearMonthAdjustment', 'bool'),
  \ ])

call xaml#class('DaylightTime', 'Object', [
  \ xaml#field('m_start', 'DateTime'),
  \ xaml#field('m_end', 'DateTime'),
  \ xaml#field('m_delta', 'TimeSpan'),
  \ xaml#prop('Start', 'DateTime'),
  \ xaml#prop('End', 'DateTime'),
  \ xaml#prop('Delta', 'TimeSpan'),
  \ ])

call xaml#class('GregorianCalendar', 'Calendar', [
  \ xaml#field('m_type', 'GregorianCalendarTypes'),
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('AlgorithmType', 'CalendarAlgorithmType'),
  \ xaml#prop('CalendarType', 'GregorianCalendarTypes'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ xaml#prop('TwoDigitYearMax', 'int32'),
  \ ])

call xaml#class('HebrewCalendar', 'Calendar', [
  \ xaml#field('year', 'int32'),
  \ xaml#field('month', 'int32'),
  \ xaml#field('day', 'int32'),
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('AlgorithmType', 'CalendarAlgorithmType'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ xaml#prop('TwoDigitYearMax', 'int32'),
  \ ])

call xaml#class('HijriCalendar', 'Calendar', [
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('AlgorithmType', 'CalendarAlgorithmType'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('HijriAdjustment', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ xaml#prop('TwoDigitYearMax', 'int32'),
  \ ])

call xaml#class('UmAlQuraCalendar', 'Calendar', [
  \ xaml#field('HijriMonthsLengthFlags', 'int32'),
  \ xaml#field('GregorianDate', 'DateTime'),
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('AlgorithmType', 'CalendarAlgorithmType'),
  \ xaml#prop('BaseCalendarID', 'int32'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ xaml#prop('TwoDigitYearMax', 'int32'),
  \ ])

call xaml#class('EastAsianLunisolarCalendar', 'Calendar', [
  \ xaml#prop('AlgorithmType', 'CalendarAlgorithmType'),
  \ xaml#prop('MinCalendarYear', 'int32'),
  \ xaml#prop('MaxCalendarYear', 'int32'),
  \ xaml#prop('CalEraInfo', 'EraInfo[]'),
  \ xaml#prop('MinDate', 'DateTime'),
  \ xaml#prop('MaxDate', 'DateTime'),
  \ xaml#prop('TwoDigitYearMax', 'int32'),
  \ ])

call xaml#class('ChineseLunisolarCalendar', 'EastAsianLunisolarCalendar', [
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('MinCalendarYear', 'int32'),
  \ xaml#prop('MaxCalendarYear', 'int32'),
  \ xaml#prop('MinDate', 'DateTime'),
  \ xaml#prop('MaxDate', 'DateTime'),
  \ xaml#prop('CalEraInfo', 'EraInfo[]'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('BaseCalendarID', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ ])

call xaml#class('JapaneseLunisolarCalendar', 'EastAsianLunisolarCalendar', [
  \ xaml#field('helper', 'GregorianCalendarHelper'),
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('MinCalendarYear', 'int32'),
  \ xaml#prop('MaxCalendarYear', 'int32'),
  \ xaml#prop('MinDate', 'DateTime'),
  \ xaml#prop('MaxDate', 'DateTime'),
  \ xaml#prop('CalEraInfo', 'EraInfo[]'),
  \ xaml#prop('BaseCalendarID', 'int32'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ ])

call xaml#class('JulianCalendar', 'Calendar', [
  \ xaml#field('MaxYear', 'int32'),
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('AlgorithmType', 'CalendarAlgorithmType'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ xaml#prop('TwoDigitYearMax', 'int32'),
  \ ])

call xaml#class('KoreanLunisolarCalendar', 'EastAsianLunisolarCalendar', [
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('MinCalendarYear', 'int32'),
  \ xaml#prop('MaxCalendarYear', 'int32'),
  \ xaml#prop('MinDate', 'DateTime'),
  \ xaml#prop('MaxDate', 'DateTime'),
  \ xaml#prop('CalEraInfo', 'EraInfo[]'),
  \ xaml#prop('BaseCalendarID', 'int32'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ ])

call xaml#class('PersianCalendar', 'Calendar', [
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('AlgorithmType', 'CalendarAlgorithmType'),
  \ xaml#prop('BaseCalendarID', 'int32'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ xaml#prop('TwoDigitYearMax', 'int32'),
  \ ])

call xaml#class('TaiwanLunisolarCalendar', 'EastAsianLunisolarCalendar', [
  \ xaml#field('helper', 'GregorianCalendarHelper'),
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('MinCalendarYear', 'int32'),
  \ xaml#prop('MaxCalendarYear', 'int32'),
  \ xaml#prop('MinDate', 'DateTime'),
  \ xaml#prop('MaxDate', 'DateTime'),
  \ xaml#prop('CalEraInfo', 'EraInfo[]'),
  \ xaml#prop('BaseCalendarID', 'int32'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ ])

call xaml#class('IdnMapping', 'Object', [
  \ xaml#prop('AllowUnassigned', 'bool'),
  \ xaml#prop('UseStd3AsciiRules', 'bool'),
  \ ])

call xaml#class('JapaneseCalendar', 'Calendar', [
  \ xaml#field('helper', 'GregorianCalendarHelper'),
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('AlgorithmType', 'CalendarAlgorithmType'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ xaml#prop('TwoDigitYearMax', 'int32'),
  \ ])

call xaml#class('KoreanCalendar', 'Calendar', [
  \ xaml#field('helper', 'GregorianCalendarHelper'),
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('AlgorithmType', 'CalendarAlgorithmType'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ xaml#prop('TwoDigitYearMax', 'int32'),
  \ ])

call xaml#class('RegionInfo', 'Object', [
  \ xaml#field('m_name', 'string'),
  \ xaml#field('m_cultureData', 'CultureData'),
  \ xaml#field('m_dataItem', 'int32'),
  \ xaml#prop('CurrentRegion', 'RegionInfo'),
  \ xaml#prop('Name', 'string'),
  \ xaml#prop('EnglishName', 'string'),
  \ xaml#prop('DisplayName', 'string'),
  \ xaml#prop('NativeName', 'string'),
  \ xaml#prop('TwoLetterISORegionName', 'string'),
  \ xaml#prop('ThreeLetterISORegionName', 'string'),
  \ xaml#prop('ThreeLetterWindowsRegionName', 'string'),
  \ xaml#prop('IsMetric', 'bool'),
  \ xaml#prop('GeoId', 'int32'),
  \ xaml#prop('CurrencyEnglishName', 'string'),
  \ xaml#prop('CurrencyNativeName', 'string'),
  \ xaml#prop('CurrencySymbol', 'string'),
  \ xaml#prop('ISOCurrencySymbol', 'string'),
  \ ])

call xaml#class('SortKey', 'Object', [
  \ xaml#field('localeName', 'string'),
  \ xaml#field('win32LCID', 'int32'),
  \ xaml#field('options', 'CompareOptions'),
  \ xaml#field('m_String', 'string'),
  \ xaml#field('m_KeyData', 'uint8[]'),
  \ xaml#prop('OriginalString', 'string'),
  \ xaml#prop('KeyData', 'uint8[]'),
  \ ])

call xaml#class('StringInfo', 'Object', [
  \ xaml#prop('String', 'string'),
  \ xaml#prop('LengthInTextElements', 'int32'),
  \ ])

call xaml#class('TaiwanCalendar', 'Calendar', [
  \ xaml#field('helper', 'GregorianCalendarHelper'),
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('AlgorithmType', 'CalendarAlgorithmType'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ xaml#prop('TwoDigitYearMax', 'int32'),
  \ ])

call xaml#class('TextInfo', 'Object', [
  \ xaml#field('m_nDataItem', 'int32'),
  \ xaml#field('m_useUserOverride', 'bool'),
  \ xaml#field('m_win32LangID', 'int32'),
  \ xaml#prop('ANSICodePage', 'int32'),
  \ xaml#prop('OEMCodePage', 'int32'),
  \ xaml#prop('MacCodePage', 'int32'),
  \ xaml#prop('EBCDICCodePage', 'int32'),
  \ xaml#prop('LCID', 'int32'),
  \ xaml#prop('CultureName', 'string'),
  \ xaml#prop('IsReadOnly', 'bool'),
  \ xaml#prop('ListSeparator', 'string'),
  \ xaml#prop('IsRightToLeft', 'bool'),
  \ ])

call xaml#class('ThaiBuddhistCalendar', 'Calendar', [
  \ xaml#field('helper', 'GregorianCalendarHelper'),
  \ xaml#prop('MinSupportedDateTime', 'DateTime'),
  \ xaml#prop('MaxSupportedDateTime', 'DateTime'),
  \ xaml#prop('AlgorithmType', 'CalendarAlgorithmType'),
  \ xaml#prop('ID', 'int32'),
  \ xaml#prop('Eras', 'int32[]'),
  \ xaml#prop('TwoDigitYearMax', 'int32'),
  \ ])

call xaml#class('NumberFormatInfo', 'Object', [
  \ xaml#field('numberGroupSizes', 'int32[]'),
  \ xaml#field('currencyGroupSizes', 'int32[]'),
  \ xaml#field('percentGroupSizes', 'int32[]'),
  \ xaml#field('positiveSign', 'string'),
  \ xaml#field('negativeSign', 'string'),
  \ xaml#field('numberDecimalSeparator', 'string'),
  \ xaml#field('numberGroupSeparator', 'string'),
  \ xaml#field('currencyGroupSeparator', 'string'),
  \ xaml#field('currencyDecimalSeparator', 'string'),
  \ xaml#field('currencySymbol', 'string'),
  \ xaml#field('ansiCurrencySymbol', 'string'),
  \ xaml#field('nanSymbol', 'string'),
  \ xaml#field('positiveInfinitySymbol', 'string'),
  \ xaml#field('negativeInfinitySymbol', 'string'),
  \ xaml#field('percentDecimalSeparator', 'string'),
  \ xaml#field('percentGroupSeparator', 'string'),
  \ xaml#field('percentSymbol', 'string'),
  \ xaml#field('perMilleSymbol', 'string'),
  \ xaml#field('nativeDigits', 'string[]'),
  \ xaml#field('m_dataItem', 'int32'),
  \ xaml#field('numberDecimalDigits', 'int32'),
  \ xaml#field('currencyDecimalDigits', 'int32'),
  \ xaml#field('currencyPositivePattern', 'int32'),
  \ xaml#field('currencyNegativePattern', 'int32'),
  \ xaml#field('numberNegativePattern', 'int32'),
  \ xaml#field('percentPositivePattern', 'int32'),
  \ xaml#field('percentNegativePattern', 'int32'),
  \ xaml#field('percentDecimalDigits', 'int32'),
  \ xaml#field('digitSubstitution', 'int32'),
  \ xaml#field('isReadOnly', 'bool'),
  \ xaml#field('m_useUserOverride', 'bool'),
  \ xaml#field('m_isInvariant', 'bool'),
  \ xaml#field('validForParseAsNumber', 'bool'),
  \ xaml#field('validForParseAsCurrency', 'bool'),
  \ xaml#prop('InvariantInfo', 'NumberFormatInfo'),
  \ xaml#prop('CurrencyDecimalDigits', 'int32'),
  \ xaml#prop('CurrencyDecimalSeparator', 'string'),
  \ xaml#prop('IsReadOnly', 'bool'),
  \ xaml#prop('CurrencyGroupSizes', 'int32[]'),
  \ xaml#prop('NumberGroupSizes', 'int32[]'),
  \ xaml#prop('PercentGroupSizes', 'int32[]'),
  \ xaml#prop('CurrencyGroupSeparator', 'string'),
  \ xaml#prop('CurrencySymbol', 'string'),
  \ xaml#prop('CurrentInfo', 'NumberFormatInfo'),
  \ xaml#prop('NaNSymbol', 'string'),
  \ xaml#prop('CurrencyNegativePattern', 'int32'),
  \ xaml#prop('NumberNegativePattern', 'int32'),
  \ xaml#prop('PercentPositivePattern', 'int32'),
  \ xaml#prop('PercentNegativePattern', 'int32'),
  \ xaml#prop('NegativeInfinitySymbol', 'string'),
  \ xaml#prop('NegativeSign', 'string'),
  \ xaml#prop('NumberDecimalDigits', 'int32'),
  \ xaml#prop('NumberDecimalSeparator', 'string'),
  \ xaml#prop('NumberGroupSeparator', 'string'),
  \ xaml#prop('CurrencyPositivePattern', 'int32'),
  \ xaml#prop('PositiveInfinitySymbol', 'string'),
  \ xaml#prop('PositiveSign', 'string'),
  \ xaml#prop('PercentDecimalDigits', 'int32'),
  \ xaml#prop('PercentDecimalSeparator', 'string'),
  \ xaml#prop('PercentGroupSeparator', 'string'),
  \ xaml#prop('PercentSymbol', 'string'),
  \ xaml#prop('PerMilleSymbol', 'string'),
  \ xaml#prop('NativeDigits', 'string[]'),
  \ xaml#prop('DigitSubstitution', 'DigitShapes'),
  \ ])

